/* Copyright 2021 REPLACE_WITH_YOUR_NAME
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "quantum.h"

#define CONFIGURE_LED_FOR_OUTPUT (DDRD |= (1<<6))
#define CONFIGURE_LED_FOR_INPUT	(DDRD &= ~(1<<6))
#define LED_ON (PORTD |= (1<<6))
#define LED_OFF (PORTD &= ~(1<<6))

#define CONFIGURE_LAMI_FOR_OUTPUT (DDRB |= (1<<DDB6))
#define CONFIGURE_LAMI_FOR_INPUT (DDRB &= ~(1<<DDB6))
#define LAMI_ON (PORTB |= (1<<PB6))
#define LAMI_OFF (PORTB &= ~(1<<PB6))
#define LAMI_IS_PRESSED (PINB & (1<<PINB6))

#define CONFIGURE_CTRL_FOR_OUTPUT (DDRB |= (1<<DDB3))
#define CONFIGURE_CTRL_FOR_INPUT (DDRB &= ~(1<<DDB3))
#define CTRL_ON	(PORTB |= (1<<PB3))
#define CTRL_OFF (PORTB &= ~(1<<PB3))
#define CTRL_IS_PRESSED (PINB & (1<<PINB3))

#define CONFIGURE_RAMI_FOR_OUTPUT (DDRB |= (1<<DDB2))
#define CONFIGURE_RAMI_FOR_INPUT (DDRB &= ~(1<<DDB2))
#define RAMI_ON (PORTB |= (1<<PB2))
#define RAMI_OFF (PORTB &= ~(1<<PB2))
#define RAMI_IS_PRESSED (PINB & (1<<PINB2))

#define CONFIGURE_STA1_FOR_OUTPUT (DDRF |= (1<<DDB5))
#define CONFIGURE_STA1_FOR_INPUT (DDRF &= ~(1<<DDB5))
#define STA1_ON (PORTF |= (1<<PF5))
#define STA1_OFF (PORTF &= ~(1<<PF5))

#define CONFIGURE_STA2_FOR_OUTPUT (DDRF |= (1<<DDB4))
#define CONFIGURE_STA2_FOR_INPUT (DDRF &= ~(1<<DDB4))
#define STA2_ON (PORTF |= (1<<PF4))
#define STA2_OFF (PORTF &= ~(1<<PF4))

#define CONFIGURE_STA3_FOR_OUTPUT (DDRF |= (1<<DDB3))
#define CONFIGURE_STA3_FOR_INPUT (DDRF &= ~(1<<DDB3))
#define STA3_ON (PORTF |= (1<<PF3))
#define STA3_OFF (PORTF &= ~(1<<PF3))

#define CONFIGURE_KCLK_FOR_OUTPUT (DDRF |= (1<<DDB6))
#define CONFIGURE_KCLK_FOR_INPUT (DDRF &= ~(1<<DDB6))
#define KCLK_ON (PORTF |= (1<<PF6))
#define KCLK_OFF (PORTF &= ~(1<<PF6))

#define CONFIGURE_KDAT_FOR_OUTPUT (DDRF |= (1<<DDB7))
#define CONFIGURE_KDAT_FOR_INPUT (DDRF &= ~(1<<DDB7))
#define KDAT_ON (PORTF |= (1<<PF7))
#define KDAT_OFF (PORTF &= ~(1<<PF7))

__attribute__((weak)) void matrix_init_user(void);

#define LAYOUT( \
    K00, K01, K02, K03,   \
    K10, K11, K12, K13,   \
    K20, K21, K22, K23,   \
    K30, K31, K32, K43,   \
    K41,      K42         \
) { \
    { K00,   K01,   K02,   K03   }, \
    { K10,   K11,   K12,   K13   }, \
    { K20,   K21,   K22,   K23   }, \
    { K30,   K31,   K32,   KC_NO }, \
    { KC_NO, K41,   K42,   K43   }, \
}

// generated by KBFirmware JSON to QMK Parser
// https://noroadsleft.github.io/kbf_qmk_converter/
